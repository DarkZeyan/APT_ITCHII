/*
JORGE EDUARDO ESCOBAR BUGARINI - ISC - 21550317
 */
package com.views;

import LibreriaFecha.Fecha;
import com.controller.Controller;
import com.model.Cuenta;
import com.model.Movimiento;
import com.model.Tarjeta;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Movimientos extends javax.swing.JPanel {

    /**
     *
     */
    
    private Controller controller;
    Tarjeta tarjetaActiva;
    public void setController(Controller controller) {
        this.controller = controller;
    }
    
    public Movimientos() {
        initComponents();
        setSize(970, 548);
    }
    
     public void llenarTabla(Tarjeta tarjeta){
     tarjetaActiva = tarjeta;
    DefaultTableModel dt = (DefaultTableModel) movimientosTable.getModel();
        List<Movimiento> movimientos = controller.getLogicaMovimiento().getListaMovimientos(tarjeta);
        
         int i=0;
        while(dt.getRowCount()!=movimientos.size()){
           
            dt.addRow(new Object[]{
                tarjeta.getClave_tarjeta(),
                movimientos.get(i).getClave(),
                movimientos.get(i).getFechaMovimiento().toString(),
                movimientos.get(i).tipoString(),
                movimientos.get(i).getCantidad()
            });
            System.out.println("Entro movimiento" +i);
            i++;
        }

        movimientosTable.setModel(dt);
    }
    
    public void limpiarTabla(){
        DefaultTableModel dt = (DefaultTableModel) movimientosTable.getModel();
        dt.setRowCount(0);
        movimientosTable.setModel(dt);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        goBackBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        movimientosTable = new javax.swing.JTable();
        btnAddMov = new javax.swing.JButton();
        btnRemoveMov = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        banner.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Movimientos");

        goBackBtn.setBackground(new java.awt.Color(255, 0, 0));
        goBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/esquema-de-boton-circular-de-flecha-hacia-atras-izquierda.png"))); // NOI18N
        goBackBtn.setBorder(null);
        goBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bannerLayout = new javax.swing.GroupLayout(banner);
        banner.setLayout(bannerLayout);
        bannerLayout.setHorizontalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(goBackBtn)
                .addGap(382, 382, 382)
                .addComponent(jLabel1)
                .addContainerGap(422, Short.MAX_VALUE))
        );
        bannerLayout.setVerticalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBackBtn)
                    .addComponent(jLabel1))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        add(banner);
        banner.setBounds(0, 0, 971, 90);

        movimientosTable.setBackground(new java.awt.Color(255, 255, 255));
        movimientosTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));
        movimientosTable.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        movimientosTable.setForeground(new java.awt.Color(0, 0, 0));
        movimientosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave_Tarjeta", "Clave Movimiento", "Fecha de movimiento", "Tipo de movimiento", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        movimientosTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        movimientosTable.setGridColor(new java.awt.Color(255, 0, 0));
        movimientosTable.setSelectionBackground(new java.awt.Color(255, 102, 102));
        jScrollPane1.setViewportView(movimientosTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(130, 110, 690, 350);

        btnAddMov.setBackground(new java.awt.Color(255, 0, 0));
        btnAddMov.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        btnAddMov.setForeground(new java.awt.Color(255, 255, 255));
        btnAddMov.setText("Nuevo movimiento");
        btnAddMov.setToolTipText("");
        btnAddMov.setBorder(null);
        btnAddMov.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovActionPerformed(evt);
            }
        });
        add(btnAddMov);
        btnAddMov.setBounds(330, 480, 133, 40);

        btnRemoveMov.setBackground(new java.awt.Color(255, 0, 0));
        btnRemoveMov.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        btnRemoveMov.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveMov.setText("Eliminar movimiento");
        btnRemoveMov.setToolTipText("");
        btnRemoveMov.setBorder(null);
        btnRemoveMov.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMovActionPerformed(evt);
            }
        });
        add(btnRemoveMov);
        btnRemoveMov.setBounds(520, 480, 133, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void goBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackBtnActionPerformed
        controller.mostrarTablaTarjetas();
        limpiarTabla();
    }//GEN-LAST:event_goBackBtnActionPerformed

    private void btnAddMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovActionPerformed
        
        try{
            
        int dia = Integer.parseInt(JOptionPane.showInputDialog(null, "Introduce el dia del movimiento"));
        int mes = Integer.parseInt(JOptionPane.showInputDialog(null, "Introduce el mes del movimiento"));
        int a単o = Integer.parseInt(JOptionPane.showInputDialog(null, "Introduce el a単o del movimiento"));
        int tipoMov = Integer.parseInt(JOptionPane.showInputDialog(null, "Introduce el tipo de movimiento"));
        double importe = Double.parseDouble(JOptionPane.showInputDialog(null, "Introduzca el importe"));
        Fecha fechaMov =  new Fecha(dia,mes,a単o);
        Tarjeta tarjeta = tarjetaActiva;
        Movimiento mov = new Movimiento(tarjeta, fechaMov, tipoMov, importe, a単o);
        controller.getLogicaMovimiento().agregar(mov);;
        llenarTabla(tarjetaActiva);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_btnAddMovActionPerformed

    private void btnRemoveMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMovActionPerformed
    
         try {
            int idMovimiento = Integer.parseInt(movimientosTable.getValueAt(movimientosTable.getSelectedRow(), 0).toString());

            int idTarjeta= tarjetaActiva.getClave_tarjeta();
                controller.getLogicaMovimiento().eliminar(idMovimiento,idTarjeta);
                limpiarTabla();
                llenarTabla(tarjetaActiva);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Fallo");
        }
    }//GEN-LAST:event_btnRemoveMovActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel banner;
    private javax.swing.JButton btnAddMov;
    private javax.swing.JButton btnRemoveMov;
    private javax.swing.JButton goBackBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable movimientosTable;
    // End of variables declaration//GEN-END:variables
}
