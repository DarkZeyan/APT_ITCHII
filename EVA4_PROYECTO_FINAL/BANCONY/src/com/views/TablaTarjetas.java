/*
JORGE EDUARDO ESCOBAR BUGARINI - ISC - 21550317
 */
package com.views;

import com.controller.Controller;
import com.model.Cliente;
import com.model.Cuenta;
import com.model.Tarjeta;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class TablaTarjetas extends javax.swing.JPanel {

    /**
     * Creates new form TablaTarjetas
     */
    private Controller controller;

    Cuenta cuentaActiva;

    public void setController(Controller controller) {
        this.controller = controller;
    }

    public TablaTarjetas() {
        initComponents();
        setSize(970, 548);
    }

    public void llenarTabla(Cuenta cuenta) {
        cuentaActiva = cuenta;
        DefaultTableModel dt = (DefaultTableModel) cardsTable.getModel();
        List<Tarjeta> tarjetas = controller.getLogicaTarjeta().getListaTarjetas(cuenta);

        int i = 0;
        while (dt.getRowCount() != tarjetas.size()) {

            dt.addRow(new Object[]{
                tarjetas.get(i).getClave_tarjeta(),
                cuenta.getC_cuenta(),
                cuenta.getNumerocuenta(),
                tarjetas.get(i).getNumero_tarjeta(),
                tarjetas.get(i).getLimite_credito()
            });
            System.out.println("Entro tarjeta" + i);
            i++;
        }

        cardsTable.setModel(dt);
    }

    public void limpiarTabla() {
        DefaultTableModel dt = (DefaultTableModel) cardsTable.getModel();
        dt.setRowCount(0);
        cardsTable.setModel(dt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        goBackBtn = new javax.swing.JButton();
        cardsContainer = new javax.swing.JScrollPane();
        cardsTable = new javax.swing.JTable();
        addCardBtn = new javax.swing.JButton();
        deleteCardBtn = new javax.swing.JButton();
        movBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        banner.setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tarjetas del cliente");

        goBackBtn.setBackground(new java.awt.Color(255, 0, 0));
        goBackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/esquema-de-boton-circular-de-flecha-hacia-atras-izquierda.png"))); // NOI18N
        goBackBtn.setBorder(null);
        goBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bannerLayout = new javax.swing.GroupLayout(banner);
        banner.setLayout(bannerLayout);
        bannerLayout.setHorizontalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(goBackBtn)
                .addGap(347, 347, 347)
                .addComponent(jLabel1)
                .addContainerGap(393, Short.MAX_VALUE))
        );
        bannerLayout.setVerticalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBackBtn)
                    .addComponent(jLabel1))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        add(banner);
        banner.setBounds(0, 0, 970, 90);

        cardsTable.setBackground(new java.awt.Color(255, 255, 255));
        cardsTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));
        cardsTable.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        cardsTable.setForeground(new java.awt.Color(0, 0, 0));
        cardsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave Tarjeta", "Clave cuenta", "Numero de cuenta", "Numero de tarjeta", "Limite de crédito"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cardsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cardsTable.setGridColor(new java.awt.Color(255, 0, 0));
        cardsTable.setSelectionBackground(new java.awt.Color(255, 102, 102));
        cardsContainer.setViewportView(cardsTable);

        add(cardsContainer);
        cardsContainer.setBounds(150, 110, 700, 350);

        addCardBtn.setBackground(new java.awt.Color(255, 0, 0));
        addCardBtn.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        addCardBtn.setForeground(new java.awt.Color(255, 255, 255));
        addCardBtn.setText("Añadir tarjeta");
        addCardBtn.setToolTipText("");
        addCardBtn.setBorder(null);
        addCardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addCardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCardBtnActionPerformed(evt);
            }
        });
        add(addCardBtn);
        addCardBtn.setBounds(270, 470, 133, 40);

        deleteCardBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteCardBtn.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        deleteCardBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteCardBtn.setText("Eliminar tarjeta");
        deleteCardBtn.setToolTipText("");
        deleteCardBtn.setBorder(null);
        deleteCardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteCardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCardBtnActionPerformed(evt);
            }
        });
        add(deleteCardBtn);
        deleteCardBtn.setBounds(570, 470, 133, 40);

        movBtn.setBackground(new java.awt.Color(255, 0, 0));
        movBtn.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        movBtn.setForeground(new java.awt.Color(255, 255, 255));
        movBtn.setText("Ver movimientos");
        movBtn.setToolTipText("");
        movBtn.setBorder(null);
        movBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        movBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movBtnActionPerformed(evt);
            }
        });
        add(movBtn);
        movBtn.setBounds(420, 470, 133, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void movBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movBtnActionPerformed
        try {
            int idTarjeta = Integer.parseInt(cardsTable.getValueAt(cardsTable.getSelectedRow(), 0).toString());

            Tarjeta tarjeta = controller.getLogicaTarjeta().consultar(idTarjeta);

            if (tarjeta != null) {
                controller.getMovimientos().llenarTabla(tarjeta);
                controller.mostrarMovimientos();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Fallo");
        }
    }//GEN-LAST:event_movBtnActionPerformed

    private void addCardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCardBtnActionPerformed
        controller.mostrarRegistrarTarjeta();
    }//GEN-LAST:event_addCardBtnActionPerformed

    private void goBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackBtnActionPerformed
        controller.mostrarCuentasCliente();
        limpiarTabla();
    }//GEN-LAST:event_goBackBtnActionPerformed

    private void deleteCardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCardBtnActionPerformed
        try {
            int idTarjeta = Integer.parseInt(cardsTable.getValueAt(cardsTable.getSelectedRow(), 0).toString());

            int claveCuenta = cuentaActiva.getC_cuenta();
                controller.getLogicaTarjeta().eliminar(claveCuenta,idTarjeta);
                limpiarTabla();
                llenarTabla(cuentaActiva);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Fallo");
        }
    }//GEN-LAST:event_deleteCardBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCardBtn;
    private javax.swing.JPanel banner;
    private javax.swing.JScrollPane cardsContainer;
    private javax.swing.JTable cardsTable;
    private javax.swing.JButton deleteCardBtn;
    private javax.swing.JButton goBackBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton movBtn;
    // End of variables declaration//GEN-END:variables
}
